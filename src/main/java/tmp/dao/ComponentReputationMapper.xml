<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tmp.dao.ComponentReputationMapper">
    <resultMap id="BaseResultMap" type="tmp.entity.ComponentReputation">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="componentUid" property="componentUid" jdbcType="VARCHAR"/>
        <result column="reputationValue" property="reputationValue" jdbcType="DECIMAL"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, uid, componentUid, reputationValue, createTime
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from componentreputation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from componentreputation
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="tmp.entity.ComponentReputation">
        insert into componentreputation (id, uid, componentUid,
        reputationValue, createTime)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{componentUid,jdbcType=VARCHAR},
        #{reputationValue,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="tmp.entity.ComponentReputation">
        insert into componentreputation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="componentUid != null">
                componentUid,
            </if>
            <if test="reputationValue != null">
                reputationValue,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="componentUid != null">
                #{componentUid,jdbcType=VARCHAR},
            </if>
            <if test="reputationValue != null">
                #{reputationValue,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="tmp.entity.ComponentReputation">
        update componentreputation
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="componentUid != null">
                componentUid = #{componentUid,jdbcType=VARCHAR},
            </if>
            <if test="reputationValue != null">
                reputationValue = #{reputationValue,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="tmp.entity.ComponentReputation">
        update componentreputation
        set uid = #{uid,jdbcType=VARCHAR},
        componentUid = #{componentUid,jdbcType=VARCHAR},
        reputationValue = #{reputationValue,jdbcType=DECIMAL},
        createTime = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="queryReputationListByComponentUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from componentreputation
        where componentUid = #{componentUid,jdbcType=VARCHAR}
        ORDER BY id
        DESC
        limit 20
    </select>
</mapper>